<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ryji's personal blog</title><link>http://ryji.github.io/</link><description>Recent content on ryji's personal blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sat, 27 Mar 2021 10:16:33 +0800</lastBuildDate><atom:link href="http://ryji.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Release It 读书笔记 - Stability patterns (part2)</title><link>http://ryji.github.io/post/release_it/stability_pattern_part2/</link><pubDate>Sat, 27 Mar 2021 10:16:33 +0800</pubDate><guid>http://ryji.github.io/post/release_it/stability_pattern_part2/</guid><description>本文为 Release It! 第五章笔记的第二部分，主要介绍服务/应用设计中可以提高系统可用性的模式 (patterns)。这些模式可以降低、减缓或者消除因局部系</description></item><item><title>Release It 读书笔记 - Stability patterns (part1)</title><link>http://ryji.github.io/post/release_it/stability_pattern_part1/</link><pubDate>Sun, 21 Mar 2021 20:45:59 +0800</pubDate><guid>http://ryji.github.io/post/release_it/stability_pattern_part1/</guid><description>本文为 Release It! 第五章笔记的第一部分，主要介绍服务/应用设计中可以提高系统可用性的模式 (patterns)。这些模式可以降低、减缓或者消除因局部系</description></item><item><title>Kafka basic intro</title><link>http://ryji.github.io/post/kafka/kafka_basic_intro/</link><pubDate>Mon, 15 Mar 2021 22:37:05 +0800</pubDate><guid>http://ryji.github.io/post/kafka/kafka_basic_intro/</guid><description>Apache Kafka 是一种 publish/subscibe 类型的消息系统，常用作系统间异步通信的中间件，降低系统的耦合。其突出优点为：支持多生产/消费者、基于磁盘的消息存储、水平扩展性、</description></item><item><title>Release It 读书笔记- stability antipatterns (part2)</title><link>http://ryji.github.io/post/release_it/stability_antipattern_part2/</link><pubDate>Sun, 14 Mar 2021 21:47:37 +0800</pubDate><guid>http://ryji.github.io/post/release_it/stability_antipattern_part2/</guid><description>本文为 Release It! 第四章的笔记的第二部分，主要介绍服务/应用设计中可能引入的反模式 (antipatterns)，这些错误的设计会导致、加速系统的崩溃</description></item><item><title>Release It 读书笔记- stability antipatterns (part1)</title><link>http://ryji.github.io/post/release_it/stability_antipattern_part1/</link><pubDate>Sun, 14 Mar 2021 19:06:02 +0800</pubDate><guid>http://ryji.github.io/post/release_it/stability_antipattern_part1/</guid><description>本文为 Release It! 第四章的笔记，主要介绍服务/应用设计中可能引入的反模式 (antipatterns)，这些错误的设计会导致、加速系统的崩溃。在系统设</description></item><item><title>微服务入门 - spring boot Rest Api &amp; docker</title><link>http://ryji.github.io/post/spring/spring_boot_with_docker/</link><pubDate>Sun, 28 Feb 2021 19:34:31 +0800</pubDate><guid>http://ryji.github.io/post/spring/spring_boot_with_docker/</guid><description>本文为微服务入门， 主要介绍如何使用 Spring boot 开发一个 Rest Api 服务，以及如何将此服务打包为 docker image 并运行。 spring boot 实现 Rest Api 依赖项 依赖项主要有两个： spring-boot-starter-web 和 sprin</description></item><item><title>High-Performance Browser Networking 读书笔记-TLS</title><link>http://ryji.github.io/post/hnbp/hpbn-tls/</link><pubDate>Sat, 13 Feb 2021 15:19:53 +0800</pubDate><guid>http://ryji.github.io/post/hnbp/hpbn-tls/</guid><description>引言 TLS (Transport Layer Security)建立在传输层之上，为其它协议提供跨网络的安全传输能力，这种能力包含三个部分：加密、认证、防篡改和伪造。TLS通过</description></item><item><title>High-Performance Browser Networking 读书笔记-UDP</title><link>http://ryji.github.io/post/hnbp/hpbn-udp/</link><pubDate>Fri, 12 Feb 2021 12:15:10 +0800</pubDate><guid>http://ryji.github.io/post/hnbp/hpbn-udp/</guid><description>引言 UDP(User Datagram Protocol)协议，不同于TCP，是一种无连接的不可靠协议。在IP层的基础上，UDP协议增加了四个字段，且其中的port为可选的</description></item><item><title>High-Performance Browser Networking 读书笔记-TCP</title><link>http://ryji.github.io/post/hnbp/hpbn-tcp/</link><pubDate>Sat, 06 Feb 2021 22:43:58 +0800</pubDate><guid>http://ryji.github.io/post/hnbp/hpbn-tcp/</guid><description>引言 TCP/IP网络是互联网的核心，IP(Internet Protocal)提供了host-host的路由和寻址协议，TCP(Transmi</description></item><item><title>C# version golang singleflight</title><link>http://ryji.github.io/post/csharp/csharp_singleflight/</link><pubDate>Thu, 25 Jun 2020 15:20:33 +0800</pubDate><guid>http://ryji.github.io/post/csharp/csharp_singleflight/</guid><description>引言 GroupCache 是 go 语言的一个开源项目，其目标提供去中心节点的 P2P 分布式缓存代替 memcached。其中使用到的技术有：LRU cache，一致性哈希，并</description></item><item><title>Template in C#</title><link>http://ryji.github.io/post/csharp/template_in_csharp/</link><pubDate>Mon, 05 Mar 2018 05:43:58 +0800</pubDate><guid>http://ryji.github.io/post/csharp/template_in_csharp/</guid><description>引言 泛型（参数化类型），将程序逻辑从具体的类型中分离出来，从而提高代码的复用性。 .Net的System.Collections.Generi</description></item></channel></rss>